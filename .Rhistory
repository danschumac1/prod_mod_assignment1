Elite == " Yes "
) %>%
arrange(
desc(Outstate)
) %>%
top_n(5)
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)
) %>%
top_n(5)
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)
) %>%
top_n(5)
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)
)
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)[5]
)
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)[:5]
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)[,5]
)
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)[5]
)
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)[5,]
)
# vi
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)
)
# Load Data
read.csv(
'../data/Auto.csv'
)
# Load Data
df_auto <- read.csv(
'../data/Auto.csv'
)
# Load Data
df_auto <- read.csv(
'../data/Auto.csv'
) %>%
na.omit()
# Load Data
df_auto <- read.csv(
'../data/Auto.csv'
) %>%
na.omit()
View(df_auto)
View(df_auto)
summary(df_auto)
df_auto
print(df_auto)
##### BBBBB #####
range(df_auto$mpg)
##### BBBBB #####
range(df_auto$mpg)
range(df_auto$displacement)
range(df_auto$horsepower)
range(df_auto$horsepower)
# Load Data
df_auto <- read.csv(
'../data/Auto.csv'
) %>%
na.omit('?')
##### BBBBB #####
range(df_auto$mpg)
range(df_auto$displacement)
range(df_auto$horsepower)
View(df_auto)
# Load Data
df_auto <- read.csv(
'../data/Auto.csv',
na.strings ='?'
) %>%
na.omit('?')
print(df_auto)
##### BBBBB #####
range(df_auto$mpg)
range(df_auto$displacement)
range(df_auto$horsepower)
range(df_auto$weight)
range(df_auto$acceleration)
range(df_auto$year)
for (col_name in c(mpg, displacement, horsepower, weight, acceleration, year)) {
print(col_name)
}
attach(df_auto)
for (col_name in c(mpg, displacement, horsepower, weight, acceleration, year)) {
print(col_name)
}
mpg2 = df_auto$mpg
for (col_name in c(mpg2, displacement, horsepower, weight, acceleration, year)) {
print(col_name)
}
for (col_name in c(mpg2, displacement, horsepower, weight, acceleration, year)) {
range(col_name)
}
for (col_name in c(mpg2, displacement, horsepower, weight, acceleration, year)) {
print(range(col_name))
}
for (col_name in c(mpg2, displacement, horsepower, weight, acceleration, year)) {
print(range(df_auto$col_name))
}
for (col_name in c(mpg2, displacement, horsepower, weight, acceleration, year)) {
print(range(df_auto$[[col_name]]))
for (col_name in c('mpg2', 'displacement', 'horsepower', 'weight', 'acceleration', 'year')) {
print(range(df_auto[[col_name]]))
}
print(
paste(col_name, ':', range(df_auto[[col_name]]), '\n')
)
for (col_name in c('mpg2', 'displacement', 'horsepower', 'weight', 'acceleration', 'year')) {
print(
paste(col_name, ':', range(df_auto[[col_name]]), '\n')
)
}
for (col_name in c('mpg2', 'displacement', 'horsepower', 'weight', 'acceleration', 'year')) {
print(
paste(col_name, ':', range(df_auto[[col_name]]))
)
}
qualitative_columns <- which(names(auto) %in% c("name", "origin", "originf"))
qualitative_columns <- which(names(auto) %in% c("name", "origin", "originf"))
qualitative_columns <- which(names(df_auto) %in% c("name", "origin", "originf"))
sapply(
df_auto[,-qualitative_columns],
range
)
print("MEAN")
sapply(
df_auto[,-qualitative_columns],
mean
)
print("SD")
sapply(
df_auto[,-qualitative_columns],
sd
)
##### DDDDD #####
# remove 10th-85th obs
df_auto[1]
##### DDDDD #####
# remove 10th-85th obs
df_auto[1:]
##### DDDDD #####
# remove 10th-85th obs
df_auto[1,]
##### DDDDD #####
# remove 10th-85th obs
df_auto[3,]
##### DDDDD #####
# remove 10th-85th obs
print(df_auto[3,])
##### DDDDD #####
# remove 10th-85th obs
wth <- print(df_auto[3,])
View(wth)
##### DDDDD #####
# remove 10th-85th obs
remove_me <- print(c(10,85),)
##### DDDDD #####
# remove 10th-85th obs
remove_me <- df_auto[c(10,85),]
new_df_auto <- df_auto[-remove_me]
new_df_auto <- df_auto[-remove_me,]
##### DDDDD #####
# remove 10th-85th obs
remove_me <- df_auto[c(10,85),]
new_df_auto <- df_auto[-remove_me,]
new_df_auto <- df_auto[-c(10,85),]
new_df_auto <- df_auto[-c(10,85),]
print("RANGE")
sapply(
new_df_auto[,-qualitative_columns],
range
)
print("MEAN")
sapply(
new_df_auto[,-qualitative_columns],
mean
)
print("SD")
sapply(
new_df_auto[,-qualitative_columns],
sd
)
##### FFFFF #####
pairs(df_auto[-qualitative_columns])
##### FFFFF #####
pairs(df_auto$mpg)
##### FFFFF #####
pairs(df_auto[-qualitative_columns])
plot(df$mpg, df$displacement)
plot(df_auto$mpg, df_auto$displacement)
plot(df_auto$mpg, df_auto$displacement)
plot(df_auto$mpg, df_auto$acceleration)
plot(df_auto$mpg, df_auto$year)
plot(df_auto$mpg, df_auto$horsepower)
##### EEEEE #####
pairs(df_auto[-qualitative_columns])
plot(df_auto$mpg, df_auto$displacement)
##### EEEEE #####
plot(df_auto$mpg, df_auto$displacement)
plot(df_auto$mpg, df_auto$acceleration)
plot(df_auto$mpg, df_auto$year) #
plot(df_auto$mpg, df_auto$horsepower)
##### AAAAA #####
# Load Data
library(
ISLR2
)
install.packages('ISLR2')
##### AAAAA #####
# Load Data
library(
ISLR2
)
Boston <- Boston
?Boston
dim(Boston)
##### BBBBB #####
pairs(Boston)
Boston <- Boston
##### BBBBB #####
pairs(Boston)
##### BBBBB #####
str(Boston)
pairs(Boston)
##### BBBBB #####
pairs(Boston[2,3])
##### BBBBB #####
pairs(Boston[c(2,4), c(5,6)])
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
Boston <- Boston
##### AAAAA #####
# Load Data
library(
ISLR2
)
Boston <- Boston
?Boston
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(Boston[c(2,4), c(5,6)])
##### BBBBB #####
pairs(Boston)
##### AAAAA #####
# Load Data
library(
ISLR2
)
Boston <- Boston
?Boston
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(Boston)
##### BBBBB #####
pairs(Boston)
##### AAAAA #####
# Load Data
library(
MASS
)
Boston <- Boston
?Boston
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(Boston)
##### BBBBB #####
pairs(Boston)
Boston <- df_Boston
df_Boston <- Boston
data(Boston)
##### BBBBB #####
pairs(df_Boston)
Boston <- data(Boston)
##### BBBBB #####
pairs(df_Boston)
##### AAAAA #####
# Load Data
library(
MASS
)
Boston <- data(Boston)
?Boston
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(df_Boston)
##### CCCCC #####
##### DDDDD #####
##### EEEEE #####
##### FFFFF #####
##### GGGGG #####
##### HHHHH #####
##### AAAAA #####
# Load Data
library(
ISLR2
)
Boston <- data(Boston)
?Boston
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(df_Boston)
##### CCCCC #####
##### DDDDD #####
##### EEEEE #####
##### FFFFF #####
##### GGGGG #####
##### HHHHH #####
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### AAAAA #####
# Load Data
library(
ISLR2
)
Boston # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
dim(Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
df_Boston <- Boston
dim(df_Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### AAAAA #####
# Load Data
library(
ISLR2
)
df_Boston <- Boston
?Boston
df_Boston <- Boston
?Boston
dim(df_Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(df_Boston)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
##### AAAAA #####
df_college <-
read.csv(
'../data/College.csv'
)
##### BBBBB #####
# Rename rows
rownames(df_college) <- df_college[, 1]
# get rid of redundant column
df_college <- df_college[,-1]
# Check it out
View(df_college)
##### CCCCC #####
# i
summary(df_college)
# ii
pairs(df_college[,2:12])
# iii
plot(
df_college$Outstate ~ as.factor(df_college$Private)
)
# iv
Elite <- rep ("No", nrow (df_college))
Elite[df_college$Top10perc > 50] <- " Yes "
Elite <- as.factor (Elite)
df_college <- data.frame (df_college , Elite)
summary(
df_college$Elite
)
plot(
df_college$Outstate ~ as.factor(df_college$Elite)
)
# v
par(
mfrow = c(2,2)
)
hist(df_college$Outstate, breaks=50)
hist(df_college$Enroll, breaks=15)
# vi discover on your own and report your findings.
df_college %>%
filter(
Elite == " Yes "
) %>%
arrange(
desc(Outstate)
)
# The top 5 most expensive out of state schools are
# 1. MIT
# 2. Princeton
# 3. Yale
# 4. Amherst
# 5. Williams
# Load Data
df_auto <- read.csv(
'../data/Auto.csv',
na.strings ='?'
) %>%
na.omit('?')
attach(df_auto)
mpg2 = df_auto$mpg
##### AAAAA #####
# quant preds:
#   mpg, cylinders, displacement, horsepower, weight, acceleration, year
# qual preds:
#   originf, origin, name
##### BBBBB #####
qualitative_columns <- which(names(df_auto) %in% c("name", "origin", "originf"))
print("RANGE")
sapply(
df_auto[,-qualitative_columns],
range
)
##### CCCCC #####
print("MEAN")
sapply(
df_auto[,-qualitative_columns],
mean
)
print("SD")
sapply(
df_auto[,-qualitative_columns],
sd
)
##### DDDDD #####
# remove 10th-85th obs
new_df_auto <- df_auto[-c(10,85),]
print("NEW RANGE")
sapply(
new_df_auto[,-qualitative_columns],
range
)
print("NEW MEAN")
sapply(
new_df_auto[,-qualitative_columns],
mean
)
print("NEW SD")
sapply(
new_df_auto[,-qualitative_columns],
sd
)
##### EEEEE #####
plot(df_auto$mpg, df_auto$displacement) # negative trend
plot(df_auto$mpg, df_auto$acceleration) # slight positive trend
plot(df_auto$mpg, df_auto$year) # slight positive trend
plot(df_auto$mpg, df_auto$horsepower) #negative trend
pairs(df_auto[-qualitative_columns])
##### FFFFF #####
# Looking at the pairs plot it seems that there is a some correlation between mpg and all other variables. Year and Acceleration seem the weakest.
##### AAAAA #####
# Load Data
library(
ISLR2
)
df_Boston <- Boston
?Boston
dim(df_Boston) # 506 rows (suberbs), 13 cols (housing values such as per capita crime, nox conecntration etc.)
##### BBBBB #####
pairs(df_Boston)
##### CCCCC #####
##### DDDDD #####
##### EEEEE #####
##### FFFFF #####
##### GGGGG #####
##### HHHHH #####
##### CCCCC #####
plot(crim ~ age, data= Boston, log = 'xy')
View(df_Boston)
?Boston
